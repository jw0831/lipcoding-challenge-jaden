name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start Backend Server
      working-directory: ./backend
      run: |
        python app.py &
        sleep 10
        echo "Backend server started in background"
    
    - name: Test Backend Server
      run: |
        curl -f http://localhost:8080/ || exit 1
        echo "Backend server is responding"
    
    - name: Run Backend Tests
      working-directory: ./backend
      run: |
        chmod +x ci-test.sh
        ./ci-test.sh
    
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Test Frontend Build
      working-directory: ./frontend
      run: npm run build

  integration-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Start Backend Server
      working-directory: ./backend
      run: |
        python app.py &
        sleep 15
        echo "Backend server started for integration tests"
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Test API Endpoints
      run: |
        echo "Testing API endpoints..."
        curl -f http://localhost:8080/ || exit 1
        curl -f http://localhost:8080/swagger-ui || exit 1
        curl -f http://localhost:8080/openapi.yaml || exit 1
        echo "All API endpoints are responding"
